TODO:
Some extra steps that I was either planning on doing for usability or just for fun.

1) Full config file integration. Basically if a config file is found, run withÂ 
2) Input validation across all interactive input (eg. config file, multiple entries, etc)
3) Proper exception handling. Some routines throw an error but isn't handled in the best way.
4) Proper logging integration. As per config file or extra arguments, would be nice to give the user the option of how to log output.
5) Expand thread workers with a queue. Threads can be dangerous, best to use a wait queue in order to not bombard the cpu with threads, and potentially lock up other work.
6) Packaging and systemctl integration would allow this to be run as a service managed by systemd.
Installation would also be straight forward by use of rpm.
7) Proper library structure, to allow other projects to use this.
8) Fallbacks to external libraries in case they aren't found. Right now we exit terribly if libraries aren't present. We could use more primitive ways of gathering data (eg. loop through /proc filesystem, or use subprocess to pass commands directly to bash (such as /bin/ps) to be parsed for required info.
9) Implement timeouts on any risky functions. Ideally we want to output as often as need be. If a method takes too long to work, it should exit according to whatever timeout rules are enforced.
10) Edge cases. Thorough unit tests would need to be done to cover all weird unexpected edge cases, such as pidfile not being removed correctly.
11) Restlet server when running as a daemon to return JSON or otherwise to allow other applications to leverage off of it.
